on: pull_request
name: PR Checks
jobs:
  golanglint:
    name: golang lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: reviewdog/action-golangci-lint@v1.11
      with:
        reporter: github-pr-review
        golangci_lint_flags: "./healthcheck"
        github_token: ${{ secrets.GITHUB_TOKEN }}

  dockerfilelint:
    name: dockerfile lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.0.0
    - name: hadolint
      uses: burdzwastaken/hadolint-action@1.8.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HADOLINT_ACTION_DOCKERFILE_FOLDER: .
  
  dockerbuild:
    name: docker build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.0.0
    - name: extract tag
      id: vars
      run: echo ::set-output name=redis_version::$(grep '^FROM redis' Dockerfile | cut -d ' ' -f 2 | cut -d ':' -f 2)
    - name: docker build
      run: docker build . --file Dockerfile --tag image:${{ steps.vars.outputs.redis_version }}
    - name: save docker image for cache
      run: mkdir -p image/ && docker save -o image/image.tar image:${{ steps.vars.outputs.redis_version }}
    - name: cache docker image
      uses: actions/cache@v2
      with:
        path: image/
        key: ${{ runner.os }}-docker-${{ github.sha }}

  autoapprove:
    name: Dependabot PR Auto-approve
    runs-on: ubuntu-latest
    steps:
    - uses: hmarr/auto-approve-action@v2.0.0
      if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
